'use strict';


/**
 * Add an order
 * Provide an order record to add to the database. Any address must be a match to the username provided. Users can only create orders for themselves, or create orders as a staff or administrator. The \\\"totalCost\\\" will be generated dynamically by the server and can only be changed by an administrator.
 *
 * body Order A valid order object
 * session_id String string generated by the server, sent in a cookie by the login operation
 * csrf_token String random token generated by the server, sent in a cookie by the login operation
 * returns inline_response_201_3
 **/
exports.addOrder = function(body,session_id,csrf_token) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "response" : {
    "code" : 0,
    "type" : "type",
    "message" : "message"
  },
  "content" : {
    "order" : {
      "dateCreated" : "dateCreated",
      "contents" : [ {
        "product" : {
          "images" : [ {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          }, {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          } ],
          "price" : 1.4658129805029452,
          "name" : "name",
          "rating" : 6.027456183070403,
          "description" : "description",
          "active" : true,
          "id" : 0,
          "category" : "category"
        },
        "quantity" : 1
      }, {
        "product" : {
          "images" : [ {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          }, {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          } ],
          "price" : 1.4658129805029452,
          "name" : "name",
          "rating" : 6.027456183070403,
          "description" : "description",
          "active" : true,
          "id" : 0,
          "category" : "category"
        },
        "quantity" : 1
      } ],
      "id" : 0,
      "billingAddress" : {
        "zip" : 5,
        "streetTwo" : "streetTwo",
        "city" : "city",
        "streetOne" : "streetOne",
        "id" : 6,
        "state" : "state",
        "userId" : 1
      },
      "totalCost" : 6.027456183070403,
      "username" : "username",
      "status" : "status"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 * Get all orders
 * Return a list of all orders
 *
 * session_id String string generated by the server, sent in a cookie by the login operation
 * csrf_token String random token generated by the server, sent in a cookie by the login operation
 * unfulfilled Boolean Send a true value with this query parameter to filter results to only the orders that still require action by the staff. This operation can only be performed by staff members and administrators. (optional)
 * returns inline_response_200_4
 **/
exports.getAllOrders = function(session_id,csrf_token,unfulfilled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "response" : {
    "code" : 0,
    "type" : "type",
    "message" : "message"
  },
  "content" : {
    "orders" : [ {
      "dateCreated" : "dateCreated",
      "contents" : [ {
        "product" : {
          "images" : [ {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          }, {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          } ],
          "price" : 1.4658129805029452,
          "name" : "name",
          "rating" : 6.027456183070403,
          "description" : "description",
          "active" : true,
          "id" : 0,
          "category" : "category"
        },
        "quantity" : 1
      }, {
        "product" : {
          "images" : [ {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          }, {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          } ],
          "price" : 1.4658129805029452,
          "name" : "name",
          "rating" : 6.027456183070403,
          "description" : "description",
          "active" : true,
          "id" : 0,
          "category" : "category"
        },
        "quantity" : 1
      } ],
      "id" : 0,
      "billingAddress" : {
        "zip" : 5,
        "streetTwo" : "streetTwo",
        "city" : "city",
        "streetOne" : "streetOne",
        "id" : 6,
        "state" : "state",
        "userId" : 1
      },
      "totalCost" : 6.027456183070403,
      "username" : "username",
      "status" : "status"
    }, {
      "dateCreated" : "dateCreated",
      "contents" : [ {
        "product" : {
          "images" : [ {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          }, {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          } ],
          "price" : 1.4658129805029452,
          "name" : "name",
          "rating" : 6.027456183070403,
          "description" : "description",
          "active" : true,
          "id" : 0,
          "category" : "category"
        },
        "quantity" : 1
      }, {
        "product" : {
          "images" : [ {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          }, {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          } ],
          "price" : 1.4658129805029452,
          "name" : "name",
          "rating" : 6.027456183070403,
          "description" : "description",
          "active" : true,
          "id" : 0,
          "category" : "category"
        },
        "quantity" : 1
      } ],
      "id" : 0,
      "billingAddress" : {
        "zip" : 5,
        "streetTwo" : "streetTwo",
        "city" : "city",
        "streetOne" : "streetOne",
        "id" : 6,
        "state" : "state",
        "userId" : 1
      },
      "totalCost" : 6.027456183070403,
      "username" : "username",
      "status" : "status"
    } ]
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 * Get order by id
 * Provide an order id, aka order number, and retrieve all the details about that order. Orders can only be retrieved by owners, staff and administrators.
 *
 * session_id String string generated by the server, sent in a cookie by the login operation
 * csrf_token String random token generated by the server, sent in a cookie by the login operation
 * id Integer the id assigned to an order
 * returns inline_response_201_3
 **/
exports.getOrderById = function(session_id,csrf_token,id) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "response" : {
    "code" : 0,
    "type" : "type",
    "message" : "message"
  },
  "content" : {
    "order" : {
      "dateCreated" : "dateCreated",
      "contents" : [ {
        "product" : {
          "images" : [ {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          }, {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          } ],
          "price" : 1.4658129805029452,
          "name" : "name",
          "rating" : 6.027456183070403,
          "description" : "description",
          "active" : true,
          "id" : 0,
          "category" : "category"
        },
        "quantity" : 1
      }, {
        "product" : {
          "images" : [ {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          }, {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          } ],
          "price" : 1.4658129805029452,
          "name" : "name",
          "rating" : 6.027456183070403,
          "description" : "description",
          "active" : true,
          "id" : 0,
          "category" : "category"
        },
        "quantity" : 1
      } ],
      "id" : 0,
      "billingAddress" : {
        "zip" : 5,
        "streetTwo" : "streetTwo",
        "city" : "city",
        "streetOne" : "streetOne",
        "id" : 6,
        "state" : "state",
        "userId" : 1
      },
      "totalCost" : 6.027456183070403,
      "username" : "username",
      "status" : "status"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 * Get a users orders
 * Provide a username and retrieve all orders associated with a user. Operation can only be performed by an owner, staff or administrator.
 *
 * session_id String string generated by the server, sent in a cookie by the login operation
 * csrf_token String random token generated by the server, sent in a cookie by the login operation
 * username String the unique username selected by a user at account creation
 * includeInactive Boolean true value returns all order history, false returns only orders with incomplete status (optional)
 * returns inline_response_200_4
 **/
exports.getUserOrders = function(session_id,csrf_token,username,includeInactive) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "response" : {
    "code" : 0,
    "type" : "type",
    "message" : "message"
  },
  "content" : {
    "orders" : [ {
      "dateCreated" : "dateCreated",
      "contents" : [ {
        "product" : {
          "images" : [ {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          }, {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          } ],
          "price" : 1.4658129805029452,
          "name" : "name",
          "rating" : 6.027456183070403,
          "description" : "description",
          "active" : true,
          "id" : 0,
          "category" : "category"
        },
        "quantity" : 1
      }, {
        "product" : {
          "images" : [ {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          }, {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          } ],
          "price" : 1.4658129805029452,
          "name" : "name",
          "rating" : 6.027456183070403,
          "description" : "description",
          "active" : true,
          "id" : 0,
          "category" : "category"
        },
        "quantity" : 1
      } ],
      "id" : 0,
      "billingAddress" : {
        "zip" : 5,
        "streetTwo" : "streetTwo",
        "city" : "city",
        "streetOne" : "streetOne",
        "id" : 6,
        "state" : "state",
        "userId" : 1
      },
      "totalCost" : 6.027456183070403,
      "username" : "username",
      "status" : "status"
    }, {
      "dateCreated" : "dateCreated",
      "contents" : [ {
        "product" : {
          "images" : [ {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          }, {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          } ],
          "price" : 1.4658129805029452,
          "name" : "name",
          "rating" : 6.027456183070403,
          "description" : "description",
          "active" : true,
          "id" : 0,
          "category" : "category"
        },
        "quantity" : 1
      }, {
        "product" : {
          "images" : [ {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          }, {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          } ],
          "price" : 1.4658129805029452,
          "name" : "name",
          "rating" : 6.027456183070403,
          "description" : "description",
          "active" : true,
          "id" : 0,
          "category" : "category"
        },
        "quantity" : 1
      } ],
      "id" : 0,
      "billingAddress" : {
        "zip" : 5,
        "streetTwo" : "streetTwo",
        "city" : "city",
        "streetOne" : "streetOne",
        "id" : 6,
        "state" : "state",
        "userId" : 1
      },
      "totalCost" : 6.027456183070403,
      "username" : "username",
      "status" : "status"
    } ]
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 * Edit order by id
 * Provide updated fields of an order object to update the database and return an updated order object. Editable fields are shown in the response body below. These fields can only be edited by an owner, staff or administrator. Total cost can only be edited by an administrator.
 *
 * body Order_id_body 
 * id Integer the id assigned to an order
 * session_id String string generated by the server, sent in a cookie by the login operation
 * csrf_token String random token generated by the server, sent in a cookie by the login operation
 * returns inline_response_201_3
 **/
exports.updateOrderById = function(body,id,session_id,csrf_token) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "response" : {
    "code" : 0,
    "type" : "type",
    "message" : "message"
  },
  "content" : {
    "order" : {
      "dateCreated" : "dateCreated",
      "contents" : [ {
        "product" : {
          "images" : [ {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          }, {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          } ],
          "price" : 1.4658129805029452,
          "name" : "name",
          "rating" : 6.027456183070403,
          "description" : "description",
          "active" : true,
          "id" : 0,
          "category" : "category"
        },
        "quantity" : 1
      }, {
        "product" : {
          "images" : [ {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          }, {
            "path" : "path",
            "sequence" : 5,
            "imageId" : 5
          } ],
          "price" : 1.4658129805029452,
          "name" : "name",
          "rating" : 6.027456183070403,
          "description" : "description",
          "active" : true,
          "id" : 0,
          "category" : "category"
        },
        "quantity" : 1
      } ],
      "id" : 0,
      "billingAddress" : {
        "zip" : 5,
        "streetTwo" : "streetTwo",
        "city" : "city",
        "streetOne" : "streetOne",
        "id" : 6,
        "state" : "state",
        "userId" : 1
      },
      "totalCost" : 6.027456183070403,
      "username" : "username",
      "status" : "status"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}

